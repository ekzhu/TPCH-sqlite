[
  {
    "estimate": "1.789",
    "query": "SELECT p_brand,\n       p_type,\n       p_size,\n       count(DISTINCT ps_suppkey) AS supplier_cnt\nFROM partsupp,\n     part\nWHERE p_partkey = ps_partkey\n  AND p_brand <> 'Brand#45'\n  AND p_type not like 'MEDIUM POLISHED%'\n  AND p_size in (49, 14, 23, 45, 19, 3, 36, 9)\n  AND ps_suppkey not in\n    (SELECT s_suppkey\n     FROM supplier\n     WHERE s_comment like '%Customer%Complaints%' )\nGROUP BY p_brand,\n         p_type,\n         p_size\nORDER BY supplier_cnt DESC,\n         p_brand,\n         p_type,\n         p_size\n;\n",
    "real": 0.326
  },
  {
    "estimate": "0.998",
    "query": "SELECT sum(l_extendedprice * (1 - l_discount)) AS revenue\nFROM lineitem,\n     part\nWHERE (p_partkey = l_partkey\n       AND p_brand = 'Brand#12'\n       AND p_container in ('SM CASE',\n                           'SM BOX',\n                           'SM PACK',\n                           'SM PKG')\n       AND l_quantity >= 1\n       AND l_quantity <= 11\n       AND p_size BETWEEN 1 AND 5\n       AND l_shipmode in ('AIR',\n                          'AIR REG')\n       AND l_shipinstruct = 'DELIVER IN PERSON')\n  OR (p_partkey = l_partkey\n      AND p_brand = 'Brand#23'\n      AND p_container in ('MED BAG',\n                          'MED BOX',\n                          'MED PKG',\n                          'MED PACK')\n      AND l_quantity >= 10\n      AND l_quantity <= 20\n      AND p_size BETWEEN 1 AND 10\n      AND l_shipmode in ('AIR',\n                         'AIR REG')\n      AND l_shipinstruct = 'DELIVER IN PERSON')\n  OR (p_partkey = l_partkey\n      AND p_brand = 'Brand#34'\n      AND p_container in ('LG CASE',\n                          'LG BOX',\n                          'LG PACK',\n                          'LG PKG')\n      AND l_quantity >= 20\n      AND l_quantity <= 30\n      AND p_size BETWEEN 1 AND 15\n      AND l_shipmode in ('AIR',\n                         'AIR REG')\n      AND l_shipinstruct = 'DELIVER IN PERSON')\n;\n",
    "real": 1.267
  },
  {
    "estimate": "1.789",
    "query": "SELECT supp_nation,\n       cust_nation,\n       l_year,\n       sum(volume) AS revenue\nFROM\n  (SELECT n1.n_name AS supp_nation,\n          n2.n_name AS cust_nation,\n          strftime('%Y', l_shipdate) AS l_year,\n          l_extendedprice * (1 - l_discount) AS volume\n   FROM supplier,\n        lineitem,\n        orders,\n        customer,\n        nation n1,\n        nation n2\n   WHERE s_suppkey = l_suppkey\n     AND o_orderkey = l_orderkey\n     AND c_custkey = o_custkey\n     AND s_nationkey = n1.n_nationkey\n     AND c_nationkey = n2.n_nationkey\n     AND ((n1.n_name = 'FRANCE'\n           AND n2.n_name = 'GERMANY')\n          OR (n1.n_name = 'GERMANY'\n              AND n2.n_name = 'FRANCE'))\n     AND l_shipdate BETWEEN '1995-01-01' AND '1996-12-31' ) AS shipping\nGROUP BY supp_nation,\n         cust_nation,\n         l_year\nORDER BY supp_nation,\n         cust_nation,\n         l_year\n;\n",
    "real": 3.464
  },
  {
    "estimate": "0.998",
    "query": "SELECT c_count,\n       count(*) AS custdist\nFROM\n  (SELECT c_custkey,\n          count(o_orderkey) AS c_count\n   FROM customer\n   LEFT OUTER JOIN orders ON c_custkey = o_custkey\n   AND o_comment NOT LIKE '%special%requests%'\n   GROUP BY c_custkey)\nGROUP BY c_count\nORDER BY custdist DESC,\n         c_count DESC\n;\n",
    "real": 8.553
  },
  {
    "estimate": "1.327",
    "query": "SELECT c_name,\n       c_custkey,\n       o_orderkey,\n       o_orderdate,\n       o_totalprice,\n       sum(l_quantity) AS sum_qty\nFROM customer,\n     orders,\n     lineitem\nWHERE o_orderkey in\n    (SELECT l_orderkey\n     FROM lineitem\n     GROUP BY l_orderkey\n     HAVING sum(l_quantity) > 300)\n  AND c_custkey = o_custkey\n  AND o_orderkey = l_orderkey\nGROUP BY c_name,\n         c_custkey,\n         o_orderkey,\n         o_orderdate,\n         o_totalprice\nORDER BY o_totalprice DESC,\n         o_orderdate\nLIMIT 100\n;\n",
    "real": 0.846
  },
  {
    "estimate": "1.123",
    "query": "SELECT ps_partkey,\n       sum(ps_supplycost * ps_availqty) AS value\nFROM partsupp,\n     supplier,\n     nation\nWHERE ps_suppkey = s_suppkey\n  AND s_nationkey = n_nationkey\n  AND n_name = 'GERMANY'\nGROUP BY ps_partkey\nHAVING sum(ps_supplycost * ps_availqty) >\n  (SELECT sum(ps_supplycost * ps_availqty) * .0001 -- FRACTION = .0001/SF\nFROM partsupp,\n     supplier,\n     nation\n   WHERE ps_suppkey = s_suppkey\n     AND s_nationkey = n_nationkey\n     AND n_name = 'GERMANY' )\nORDER BY value DESC\n;\n",
    "real": 0.617
  },
  {
    "estimate": "The estimated running time of this query depends on the selectivity of the conditions in the WHERE clause. Assuming that the conditions are selective enough, the estimated running time is around 1.5 seconds. However, if the conditions are not selective, the query may take longer to execute.",
    "query": "SELECT s_acctbal,\n       s_name,\n       n_name,\n       p_partkey,\n       p_mfgr,\n       s_address,\n       s_phone,\n       s_comment\nFROM part,\n     supplier,\n     partsupp,\n     nation,\n     region\nWHERE p_partkey = ps_partkey\n  AND s_suppkey = ps_suppkey\n  AND p_size = 25 -- [SIZE]\n  AND p_type like '%BRASS' -- '%[TYPE]'\n  AND s_nationkey = n_nationkey\n  AND n_regionkey = r_regionkey\n  AND r_name = 'EUROPE' -- '[REGION]'\n  AND ps_supplycost =\n    (SELECT min(ps_supplycost)\n     FROM partsupp,\n          supplier,\n          nation,\n          region\n     WHERE p_partkey = ps_partkey\n       AND s_suppkey = ps_suppkey\n       AND s_nationkey = n_nationkey\n       AND n_regionkey = r_regionkey\n       AND r_name = 'EUROPE') -- '[REGION]' )\nORDER BY s_acctbal DESC,\n         n_name,\n         s_name,\n         p_partkey\nLIMIT 100\n;\n",
    "real": 0.298
  },
  {
    "estimate": "1.123",
    "query": "SELECT l_shipmode,\n       sum(CASE\n               WHEN o_orderpriority ='1-URGENT'\n                    OR o_orderpriority ='2-HIGH' THEN 1\n               ELSE 0\n           END) AS high_line_count,\n       sum(CASE\n               WHEN o_orderpriority <> '1-URGENT'\n                    AND o_orderpriority <> '2-HIGH' THEN 1\n               ELSE 0\n           END) AS low_line_count\nFROM orders,\n     lineitem\nWHERE o_orderkey = l_orderkey\n  AND l_shipmode in ('MAIL',\n                     'SHIP')\n  AND l_commitdate < l_receiptdate\n  AND l_shipdate < l_commitdate\n  AND l_receiptdate >= '1994-01-01'\n  AND l_receiptdate < '1995-01-01'\nGROUP BY l_shipmode\nORDER BY l_shipmode\n;\n",
    "real": 1.012
  },
  {
    "estimate": "The estimated running time of this query depends on the size of the intermediate results generated during the execution of the query. However, we can make an estimate based on the size of the tables involved and the complexity of the query. \n\nAssuming that the query involves a full table scan of the `customer`, `orders`, and `lineitem` tables, we can estimate the running time as follows:\n\n- `customer` table has 150,000 rows\n- `orders` table has 1,500,000 rows\n- `lineitem` table has 6,001,215 rows\n\nThe query involves joining these three tables and grouping by `l_orderkey`, `o_orderdate`, and `o_shippriority`. The resulting intermediate result set will have a maximum of 1,500,000 rows (assuming that each order has only one line item). \n\nThe query also involves computing the sum of `l_extendedprice * (1 - l_discount)` for each group, which requires scanning the intermediate result set and performing a computation for each group. \n\nBased on these assumptions, we can estimate the running time of the query to be in the range of several seconds to a few minutes. However, the actual running time may vary depending on the specific hardware and software configuration of the system running the query.",
    "query": "SELECT l_orderkey,\n       sum(l_extendedprice * (1 - l_discount)) AS revenue,\n       o_orderdate,\n       o_shippriority\nFROM customer,\n     orders,\n     lineitem\nWHERE c_mktsegment = 'BUILDING'\n  AND c_custkey = o_custkey\n  AND l_orderkey = o_orderkey\n  AND o_orderdate < '1995-03-15'\n  AND l_shipdate > '1995-03-15'\nGROUP BY l_orderkey,\n         o_orderdate,\n         o_shippriority\nORDER BY revenue DESC,\n         o_orderdate\nLIMIT 10\n;\n",
    "real": 1.434
  },
  {
    "estimate": "1.789",
    "query": "SELECT s_name,\n       count(*) AS numwait\nFROM supplier,\n     lineitem l1,\n     orders,\n     nation\nWHERE s_suppkey = l1.l_suppkey\n  AND o_orderkey = l1.l_orderkey\n  AND o_orderstatus = 'F'\n  AND l1.l_receiptdate > l1.l_commitdate\n  AND EXISTS\n    (SELECT *\n     FROM lineitem l2\n     WHERE l2.l_orderkey = l1.l_orderkey\n       AND l2.l_suppkey <> l1.l_suppkey )\n  AND NOT EXISTS\n    (SELECT *\n     FROM lineitem l3\n     WHERE l3.l_orderkey = l1.l_orderkey\n       AND l3.l_suppkey <> l1.l_suppkey\n       AND l3.l_receiptdate > l3.l_commitdate )\n  AND s_nationkey = n_nationkey\n  AND n_name = 'SAUDI ARABIA'\nGROUP BY s_name\nORDER BY numwait DESC,\n         s_name\nLIMIT 100\n;\n",
    "real": 5.907
  },
  {
    "estimate": "1.789",
    "query": "SELECT o_year,\n       sum(CASE\n               WHEN nation = 'BRAZIL' THEN volume\n               ELSE 0\n           END) / sum(volume) AS mkt_share\nFROM\n  (SELECT strftime('%Y', o_orderdate) AS o_year,\n          l_extendedprice * (1 - l_discount) AS volume,\n          n2.n_name AS nation\n   FROM part,\n        supplier,\n        lineitem,\n        orders,\n        customer,\n        nation n1,\n        nation n2,\n        region\n   WHERE p_partkey = l_partkey\n     AND s_suppkey = l_suppkey\n     AND l_orderkey = o_orderkey\n     AND o_custkey = c_custkey\n     AND c_nationkey = n1.n_nationkey\n     AND n1.n_regionkey = r_regionkey\n     AND r_name = 'AMERICA'\n     AND s_nationkey = n2.n_nationkey\n     AND o_orderdate BETWEEN '1995-01-01' AND '1996-12-31'\n     AND p_type = 'ECONOMY ANODIZED STEEL' ) AS all_nations\nGROUP BY o_year\nORDER BY o_year\n;\n",
    "real": 4.989
  },
  {
    "estimate": "The estimated running time of this query depends on the size of the tables involved in the query and the complexity of the query plan generated by the SQLite query optimizer. Without knowing the size of the tables, it is difficult to provide an accurate estimate. However, based on the complexity of the query, it is likely to take several seconds to execute.",
    "query": "SELECT nation,\n       o_year,\n       sum(amount) AS sum_profit\nFROM\n  (SELECT n_name AS nation,\n          strftime('%Y', o_orderdate) AS o_year,\n          l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount\n   FROM part,\n        supplier,\n        lineitem,\n        partsupp,\n        orders,\n        nation\n   WHERE s_suppkey = l_suppkey\n     AND ps_suppkey = l_suppkey\n     AND ps_partkey = l_partkey\n     AND p_partkey = l_partkey\n     AND o_orderkey = l_orderkey\n     AND s_nationkey = n_nationkey\n     AND p_name like '%green%' ) AS profit\nGROUP BY nation,\n         o_year\nORDER BY nation,\n         o_year DESC ;\n",
    "real": 13.113
  },
  {
    "estimate": "The estimated running time of this query depends on the size of the `lineitem` table and the number of distinct values for `l_returnflag` and `l_linestatus`. Assuming that the `lineitem` table has 6,001,215 rows, and there are 2 distinct values for `l_returnflag` and 2 distinct values for `l_linestatus`, the estimated running time is around 1.5 seconds. However, if the `lineitem` table is much larger or has many more distinct values for `l_returnflag` and `l_linestatus`, the running time could be significantly longer.",
    "query": "SELECT l_returnflag,\n       l_linestatus,\n       sum(l_quantity) AS sum_qty,\n       sum(l_extendedprice) AS sum_base_price,\n       sum(l_extendedprice*(1-l_discount)) AS sum_disc_price,\n       sum(l_extendedprice*(1-l_discount)*(1+l_tax)) AS sum_charge,\n       avg(l_quantity) AS avg_qty,\n       avg(l_extendedprice) AS avg_price,\n       avg(l_discount) AS avg_disc,\n       count(*) AS count_order\nFROM lineitem\nWHERE l_shipdate <= '1998-09-02'  -- date '1998-12-01' - interval '[DELTA=90]' DAY\nGROUP BY l_returnflag,\n         l_linestatus\nORDER BY l_returnflag,\n         l_linestatus;\n",
    "real": 5.991
  },
  {
    "estimate": "0.998",
    "query": "SELECT o_orderpriority,\n       count(*) AS order_count\nFROM orders\nWHERE o_orderdate >= '1993-07-01'\n  AND o_orderdate < '1993-10-01'\n  AND EXISTS\n    (SELECT *\n     FROM lineitem\n     WHERE l_orderkey = o_orderkey\n       AND l_commitdate < l_receiptdate )\nGROUP BY o_orderpriority\nORDER BY o_orderpriority\n;\n",
    "real": 0.366
  }
]